security:
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: userName
    role_hierarchy:
        ROLE_GOD: [ROLE_ADMIN, ROLE_USER]
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        author:
            pattern: ^/author
            anonymous: false
            provider: app_user_provider
            form_login:
                login_path: author_login
                check_path: author_login_check
                default_target_path: author
            logout:
                path: author_logout
                target: book
        admin:
            pattern: ^/admin
            anonymous: false
            provider: app_user_provider
            form_login:
                login_path: admin_login
                check_path: admin_login_check
                default_target_path: admin
            logout:
                path: admin_logout
                target: book
        main:
            anonymous: true
#        main:
#            pattern: ^/author
#            anonymous: false
#            lazy: false
#            provider: app_user_provider
#            guard:
#                authenticators:
#                    - App\Security\AdminAuthenticator
#            logout:
#                path: app_logout
#                # where to redirect after logout
#                target: book
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:

        #- { path: ^/admin, roles: [ROLE_ADMIN, ROLE_GOD] }
        # - { path: ^/profile, roles: ROLE_USER }
